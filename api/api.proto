syntax = "proto3";

service Engine {
    rpc Version (VersionRequest) returns (VersionResponse) {}
    
    // A single response with the parsing result.
    rpc Parse (ParseRequest) returns (ParseResponse) {}
    // A stream of responses with logs and finally the parsing result.
    rpc ParseWithLogs (ParseRequest) returns (stream ParseResponse) {}

    // Driver management.
    // List all drivers.
    rpc ListDrivers(ListDriversRequest) returns (ListDriversResponse) {}

    // SQL stuff.
    rpc SQL(SQLRequest) returns (SQLResponse) {}

    // Start a bblfsh playground.
    rpc StartBblfshWeb(StartBblfshWebRequest) returns (StartBblfshWebResponse) {}

    // Start a gitbase playground.
    rpc StartGitbaseWeb(StartGitbaseWebRequest) returns (StartGitbaseWebResponse) {}
    
    // Stop a bblfsh playground.
    rpc StopBblfshWeb(StopBblfshWebRequest) returns (StopBblfshWebResponse) {}

    // Stop a gitbase playground.
    rpc StopGitbaseWeb(StopGitbaseWebRequest) returns (StopGitbaseWebResponse) {}
}

message VersionRequest {}

message VersionResponse {
    string version = 1;
}

message ParseRequest {
    enum Kind {
        INVALID = 0;
        LANG = 1;
        UAST = 2;
    }
    
    Kind kind = 1;
    string name = 2;
    bytes content = 3;
    
    // used for UAST and Native only
    string lang = 4;
    string query = 5;
}

message ParseResponse {
    enum Kind  {
        INVALID = 0;
        LOG = 1;
        FINAL = 2;
    }
    Kind kind = 1;
    string lang = 2;
    repeated bytes uast = 3;
    string log = 4;
}

message ListDriversRequest {}

message ListDriversResponse {
    message DriverInfo {
        string lang = 1;
        string version = 2;
    }
    repeated DriverInfo drivers = 1;
}

message SQLRequest {
    string query = 1;
}

message SQLResponse {
    message Row {
        repeated string cell = 1;
    }
    Row header = 1;
    repeated Row rows = 2;
}

message StartBblfshWebRequest {
    int32 port = 1;
}

message StartBblfshWebResponse {}

message StartGitbaseWebRequest {
    int32 port = 1;
}

message StartGitbaseWebResponse {}

message StopGitbaseWebRequest {}

message StopGitbaseWebResponse {}

message StopBblfshWebRequest {}

message StopBblfshWebResponse {}